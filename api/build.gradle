buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath "org.hibernate.orm:hibernate-gradle-plugin:6.1.6.Final"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.20'
    id 'org.hibernate.orm' version '6.1.6.Final'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.0'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'org.jetbrains.kotlin.kapt' version '1.8.0'
    id 'idea'
}

group = 'com.example'
sourceCompatibility = '19'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.hibernate:hibernate-core:6.1.6.Final'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.postgresql:postgresql:42.5.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.0.0'
    implementation 'org.json:json:20230227'
    implementation 'io.swagger.core.v3:swagger-core-jakarta:2.2.7'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    api 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    kapt 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = "19"
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

graalvmNative {
    toolchainDetection = false
    binaries {
        main {
            javaLauncher = javaToolchains.launcherFor {
                languageVersion = JavaLanguageVersion.of(19)
                vendor = JvmVendorSpec.matching("GraalVM Community")
            }
        }
    }
}

test {
    useJUnitPlatform()
}

